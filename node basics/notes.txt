Topics
1 Event loop 
When we have a call back we put it at the end of the line and when all other non blocking code has been completed then our callbacks are executed 

example:
console.log(...)
setTimeout()-> i.e a call back function 
console.log(...)


first both console logs will work then only setTimeout will execute 
This is basci of event loop



2 Asyn patterns blocking code
if i start a server and do a blocking code in one instance of it , so not only that instancewill get blocked all other user on that server(localhost )will also get blocked

///
const http = require('http')

const server = http.createServer((req, res) => {
  if (req.url === '/') {
    res.end('Home Page')
  }
  if (req.url === '/about') {
    // blocking code blocks for all user
    for (let i = 0; i < 1000; i++) {
      for (let j = 0; j < 1000; j++) {
        console.log(`${i} ${j}`)
      }
    }
    res.end('About Page')
  }
  res.end('Error Page')
})

server.listen(5000, () => {
  console.log('Server listening on port : 5000....')
})